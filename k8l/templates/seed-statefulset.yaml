apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "k8l.fullname" . }}-seed
  labels:
    {{- include "k8l.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "k8l.selectorLabels" . | nindent 6 }}
  serviceName: {{ template "k8l.fullname" . }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "k8l.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "k8l.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: k8l-data
              mountPath: {{ .Values.persistence.path }}
              subPath: {{ .Values.persistence.subPath }}
            - name: certs
              mountPath: /var/run/certs
              readOnly: true
          ports:
            - name: http
              containerPort: 9091
              protocol: TCP
          args:
          - -listen=$HOSTNAME:9091
          - -sync=$HOSTNAME:9001
          - -data=/data/data.db
          - -cert=/var/run/certs/tls.crt
          - -key=/var/run/certs/tls.key
          env:
          - name: GIN_MODE
            value: release
          
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}    
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: certs
          secret:
            secretName: {{ template "k8l.name" . }}-certs
        {{- if not .Values.persistence.enabled }}
        - name: "k8l-data"
          emptyDir: {}
        {{- else }}
        {{- if .Values.persistence.existingClaim }}
        - name: "k8l-data"
          persistentVolumeClaim:
            claimName: {{ include "k8l.tplValue" (dict "value" .Values.persistence.existingClaim "context" $) }}
        {{- end }}
        {{- end }}
        
{{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) (not .Values.persistence.volumes) }}
  volumeClaimTemplates:
    - metadata:
        name: k8l-data
        labels:
          app: {{ template "k8l.fullname" . }}
          release: {{ .Release.Name }}
          heritage: {{ .Release.Service }}
          component: master
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
            {{- if .Values.persistence.storageClass -}}
            storageClassName: {{ .Values.persistence.storageClass }}
            {{- end }}
        selector:
        {{- if .Values.persistence.matchLabels }}
          matchLabels: {{- toYaml .Values.master.persistence.matchLabels | nindent 12 }}
        {{- end -}}
        {{- if .Values.persistence.matchExpressions }}
          matchExpressions: {{- toYaml .Values.master.persistence.matchExpressions | nindent 12 }}
        {{- end -}}
  {{- end }}
